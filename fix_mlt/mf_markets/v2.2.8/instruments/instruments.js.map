{"version":3,"sources":["../../../../src/instruments/instruments.es6"],"names":["get_active_symbol","landing_company","country","is_mf_account","isFinancialAccout","is_mlt_account","isGamingAccount","is_uk","liveapi","send","active_symbols","then","data","filtered_symbols","filter","isSynthetic","symbol","market","local_storage","set","active_markets","_","groupBy","map","symbols","sym","head","name","display_name","market_display_name","submarkets","submarket","submarket_display_name","instruments","push","value","markets","chartable_markets","m","sm","ins","indexOf","length","find","remove","menu","refreshMenu","onMenuItemClick","refresh_active_symbols","get","cached","authorize","displayName","chartWindow","addNewWindow","instrumentCode","instrumentName","timePeriod","type","init","trading_times","Date","toISOString","slice","extractChartableMarkets","events","on","getMarketData","isMarketDataPresent","marketDataDisplayName","marketData","present","instrumentObj","$","each","key","trim","getSpecificMarketData","isEmptyObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAQA,QAAMA,oBAAoB,SAApBA,iBAAoB,CAACC,eAAD,EAAkBC,OAAlB,EAA8B;AACpD,YAAMC,gBAAiBC,mBAAvB;AACA,YAAMC,iBAAiBJ,kBAAkBK,gBAAgBL,eAAhB,CAAlB,GAAqD,KAA5E;AACA,YAAMM,QAAiBL,UAAUA,YAAY,IAAtB,GAA6B,KAApD;;AAEAM,oCACKC,IADL,CACU,EAAEC,gBAAgB,OAAlB,EADV,EAEKC,IAFL,CAEU,UAASC,IAAT,EAAe;AACjB,gBAAMF,iBAAiB,EAAvB;AACA,gBAAIG,yBAAJ;;AAEA,gBAAIV,aAAJ,EAAmB;AAChBU,mCAAmB,EAAnB;AACF,aAFD,MAEO,IAAIN,SAASF,cAAb,EAA6B;AACjCQ,mCAAmBD,KAAKF,cAAL,CAAoBI,MAApB,CAA2B;AAAA,2BAAUC,YAAYC,OAAOC,MAAnB,CAAV;AAAA,iBAA3B,CAAnB;AACF,aAFM,MAEA;AACJJ,mCAAmBD,KAAKF,cAAxB;AACF;AACDQ,0BAAcC,GAAd,CAAkB,gBAAlB,EAAoCN,gBAApC;;AAEA,gBAAMO,iBAAiBC,EAAER,gBAAF,EAAoBS,OAApB,CAA4B,QAA5B,EAAsCC,GAAtC,CAA0C,UAAUC,OAAV,EAAmB;AAChF,oBAAMX,mBAAmBW,OAAzB;AACA,oBAAMC,MAAMJ,EAAEK,IAAF,CAAOb,gBAAP,CAAZ;AACA,oBAAMI,SAAS,EAAEU,MAAMF,IAAIR,MAAZ,EAAoBW,cAAcH,IAAII,mBAAtC,EAAf;AACAZ,uBAAOa,UAAP,GAAoBT,EAAER,gBAAF,EAAoBS,OAApB,CAA4B,WAA5B,EAAyCC,GAAzC,CAA6C,UAAUC,OAAV,EAAmB;AAChF,wBAAMC,MAAMJ,EAAEK,IAAF,CAAOF,OAAP,CAAZ;AACA,wBAAMO,YAAY,EAAEJ,MAAMF,IAAIM,SAAZ,EAAuBH,cAAcH,IAAIO,sBAAzC,EAAlB;AACAD,8BAAUE,WAAV,GAAwBZ,EAAEE,GAAF,CAAMC,OAAN,EAAe,UAAUC,GAAV,EAAe;AAClDf,uCAAewB,IAAf,CAAoBT,IAAIT,MAAxB;AACA,+BAAO;AACHA,oCAAQS,IAAIT,MADT;AAEHY,0CAAcH,IAAIG;AAFf,yBAAP;AAIH,qBANuB,CAAxB;AAOA,2BAAOG,SAAP;AACH,iBAXmB,EAWjBI,KAXiB,EAApB;AAYA,uBAAOlB,MAAP;AACH,aAjBsB,EAiBpBkB,KAjBoB,EAAvB;AAkBAC,sBAAUC,kBAAkBd,GAAlB,CAAsB,UAAUe,CAAV,EAAa;AACzC,uBAAO;AACHV,kCAAcU,EAAEV,YADb;AAEHD,0BAAMW,EAAEX,IAFL;AAGHG,gCAAYQ,EAAER,UAAF,CAAaP,GAAb,CAAiB,UAAUgB,EAAV,EAAc;AACvC,+BAAO;AACHX,0CAAcW,GAAGX,YADd;AAEHK,yCAAaM,GAAGN,WAAH,CAAenB,MAAf,CAAsB,UAAU0B,GAAV,EAAe;AAC9C,uCAAO9B,eAAe+B,OAAf,CAAuBD,IAAIxB,MAA3B,MAAuC,CAAC,CAA/C;AACH,6BAFY;AAFV,yBAAP;AAMH,qBAPW,EAOTF,MAPS,CAOF,UAAUyB,EAAV,EAAc;AACpB,+BAAOA,GAAGN,WAAH,CAAeS,MAAf,KAA0B,CAAjC;AACH,qBATW;AAHT,iBAAP;AAcH,aAfS,EAeP5B,MAfO,CAeA,UAAUwB,CAAV,EAAa;AACnB,uBAAOA,EAAER,UAAF,CAAaY,MAAb,KAAwB,CAA/B;AACH,aAjBS,CAAV;AAkBAN,sBAAU,4CAA0BhB,cAA1B,CAAV;AACA,gBAAMa,cAAc,sBAAE,WAAF,EAAeU,IAAf,CAAoB,cAApB,CAApB;AACAV,wBAAYU,IAAZ,CAAiB,MAAjB,EAAyBC,MAAzB;AACAC,2BAAKC,WAAL,CAAiBb,WAAjB,EAA8BG,OAA9B,EAAuCW,eAAvC;AACH,SAvDL;AAwDH,KA7DD;;AA+DA,aAASC,sBAAT,GAAkC;AAC9B,YAAI9B,cAAc+B,GAAd,CAAkB,OAAlB,CAAJ,EAAgC;AAC5BzC,wCACC0C,MADD,CAECC,SAFD,GAGCxC,IAHD,CAGM,YAAM;AACR,oBAAMT,UAAUgB,cAAc+B,GAAd,CAAkB,WAAlB,EAA+B/C,OAA/C;AACAM,4CACC0C,MADD,CAECzC,IAFD,CAEM,EAAER,iBAAiBC,OAAnB,EAFN,EAGCS,IAHD,CAGM,UAACC,IAAD,EAAU;AACb,wBAAMX,kBAAkBW,KAAKX,eAA7B;AACAD,sCAAkBC,eAAlB,EAAmCC,OAAnC;AACF,iBAND;AAOH,aAZD;AAaH,SAdD,MAcO;AACHF;AACH;AACJ;;AAED,aAAS+C,eAAT,CAAyB/B,MAAzB,EAAiCoC,WAAjC,EAA8C;AAC1CC,8BAAYC,YAAZ,CAAyB;AACrBC,4BAAgBvC,MADK;AAErBwC,4BAAgBJ,WAFK;AAGrBK,wBAAY,IAHS;AAIrBC,kBAAM;AAJe,SAAzB;AAMH;;AAED,QAAItB,UAAU,EAAd;AACA,QAAIC,oBAAoB,EAAxB;;AAEO,QAAMsB,sBAAO,SAAPA,IAAO,GAAY;AAC5B,eAAOnD,4BACF0C,MADE,CACKzC,IADL,CACU,EAAEmD,eAAe,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAjB,EADV,EAEFpD,IAFE,CAEG,UAAUC,IAAV,EAAgB;AAClByB,gCAAoBQ,eAAKmB,uBAAL,CAA6BpD,IAA7B,CAApB;AACAoC;AACAxC,wCAAQyD,MAAR,CAAeC,EAAf,CAAkB,OAAlB,EAA2BlB,sBAA3B;AACAxC,wCAAQyD,MAAR,CAAeC,EAAf,CAAkB,QAAlB,EAA4BlB,sBAA5B;;AAEA,mBAAOX,iBAAP;AACH,SATE,CAAP;AAUH,KAXM;;AAaA,QAAM8B,wCAAgB,SAAhBA,aAAgB,GAAY;AACrC,eAAO/B,OAAP;AACH,KAFM;;AAIA,QAAMgC,oDAAsB,SAAtBA,mBAAsB,CAAUC,qBAAV,EAAiCC,UAAjC,EAA6C;AAC5E,YAAIC,UAAU,KAAd;AACA,YAAI,CAACD,UAAL,EAAiB;AACbA,yBAAalC,OAAb;AACH;;AAED,YAAMoC,gBAAgB,IAAtB;AACAC,yBAAEC,IAAF,CAAOJ,UAAP,EAAmB,UAAUK,GAAV,EAAexC,KAAf,EAAsB;AACrC,gBAAIA,MAAML,UAAN,IAAoBK,MAAMF,WAA9B,EAA2C;AACvCsC,0BAAUC,cAAcJ,mBAAd,CAAkCC,qBAAlC,EAAyDlC,MAAML,UAAN,IAAoBK,MAAMF,WAAnF,CAAV;AACH,aAFD,MAEO;AACH,oBAAIwC,iBAAEG,IAAF,CAAOzC,MAAMP,YAAb,KAA8B6C,iBAAEG,IAAF,CAAOP,qBAAP,CAAlC,EAAiE;AAC7DE,8BAAU,IAAV;AACH;AACJ;AACD,mBAAO,CAACA,OAAR;AACH,SATD;AAUA,eAAOA,OAAP;AACH,KAlBM;;AAoBA,QAAMM,wDAAwB,SAAxBA,qBAAwB,CAAUR,qBAAV,EAAiCC,UAAjC,EAA6C;AAC9E,YAAIC,UAAU,EAAd;AACA,YAAI,CAACD,UAAL,EAAiB;AACbA,yBAAalC,OAAb;AACH;;AAED,YAAMoC,gBAAgB,IAAtB;AACAC,yBAAEC,IAAF,CAAOJ,UAAP,EAAmB,UAAUK,GAAV,EAAexC,KAAf,EAAsB;AACrC,gBAAIA,MAAML,UAAN,IAAoBK,MAAMF,WAA9B,EAA2C;AACvCsC,0BAAUC,cAAcK,qBAAd,CAAoCR,qBAApC,EAA2DlC,MAAML,UAAN,IAAoBK,MAAMF,WAArF,CAAV;AACH,aAFD,MAEO;AACH,oBAAIwC,iBAAEG,IAAF,CAAOzC,MAAMP,YAAb,KAA8B6C,iBAAEG,IAAF,CAAOP,qBAAP,CAAlC,EAAiE;AAC7DE,8BAAUpC,KAAV;AACH;AACJ;AACD,mBAAOsC,iBAAEK,aAAF,CAAgBP,OAAhB,CAAP;AACH,SATD;AAUA,eAAOA,OAAP;AACH,KAlBM;;sBAoBQ;AACXZ,kBADW;AAEXQ,oCAFW;AAGXC,gDAHW;AAIXS;AAJW,K","file":"instruments.js","sourcesContent":["import $ from \"jquery\";\nimport liveapi from \"websockets/binary_websockets\";\nimport menu from \"navigation/menu\";\nimport chartWindow from \"charts/chartWindow\";\nimport { getSortedMarketSubmarkets } from '../common/marketUtils';\nimport \"jquery-growl\";\nimport \"common/util\";\n\nconst get_active_symbol = (landing_company, country) => {\n    const is_mf_account  = isFinancialAccout();\n    const is_mlt_account = landing_company ? isGamingAccount(landing_company) : false;\n    const is_uk          = country ? country === 'gb' : false;\n\n    liveapi\n        .send({ active_symbols: 'brief' })\n        .then(function(data) {\n            const active_symbols = [];\n            let filtered_symbols;\n    \n            if (is_mf_account) {\n               filtered_symbols = [];\n            } else if (is_uk || is_mlt_account) {\n               filtered_symbols = data.active_symbols.filter(symbol => isSynthetic(symbol.market));\n            } else {\n               filtered_symbols = data.active_symbols;\n            }\n            local_storage.set('active_symbols', filtered_symbols);\n\n            const active_markets = _(filtered_symbols).groupBy('market').map(function (symbols) {\n                const filtered_symbols = symbols;\n                const sym = _.head(filtered_symbols);\n                const market = { name: sym.market, display_name: sym.market_display_name };\n                market.submarkets = _(filtered_symbols).groupBy('submarket').map(function (symbols) {\n                    const sym = _.head(symbols);\n                    const submarket = { name: sym.submarket, display_name: sym.submarket_display_name };\n                    submarket.instruments = _.map(symbols, function (sym) {\n                        active_symbols.push(sym.symbol);\n                        return {\n                            symbol: sym.symbol,\n                            display_name: sym.display_name,\n                        };\n                    });\n                    return submarket;\n                }).value();\n                return market;\n            }).value();\n            markets = chartable_markets.map(function (m) {\n                return {\n                    display_name: m.display_name,\n                    name: m.name,\n                    submarkets: m.submarkets.map(function (sm) {\n                        return {\n                            display_name: sm.display_name,\n                            instruments: sm.instruments.filter(function (ins) {\n                                return active_symbols.indexOf(ins.symbol) !== -1;\n                            })\n                        }\n                    }).filter(function (sm) {\n                        return sm.instruments.length !== 0;\n                    })\n                }\n            }).filter(function (m) {\n                return m.submarkets.length !== 0;\n            });\n            markets = getSortedMarketSubmarkets(active_markets);\n            const instruments = $(\"#nav-menu\").find(\".instruments\");\n            instruments.find('> ul').remove();\n            menu.refreshMenu(instruments, markets, onMenuItemClick);\n        });\n}\n\nfunction refresh_active_symbols() {\n    if (local_storage.get('oauth')) {\n        liveapi\n        .cached\n        .authorize()\n        .then(() => {\n            const country = local_storage.get('authorize').country;\n            liveapi\n            .cached\n            .send({ landing_company: country })\n            .then((data) => {\n               const landing_company = data.landing_company\n               get_active_symbol(landing_company, country);\n            });\n        });\n    } else {\n        get_active_symbol();\n    }\n}\n\nfunction onMenuItemClick(symbol, displayName) {\n    chartWindow.addNewWindow({\n        instrumentCode: symbol,\n        instrumentName: displayName,\n        timePeriod: '1d',\n        type: 'candlestick'\n    });\n}\n\nlet markets = [];\nlet chartable_markets = [];\n\nexport const init = function () {\n    return liveapi\n        .cached.send({ trading_times: new Date().toISOString().slice(0, 10) })\n        .then(function (data) {\n            chartable_markets = menu.extractChartableMarkets(data);\n            refresh_active_symbols();\n            liveapi.events.on('login', refresh_active_symbols);\n            liveapi.events.on('logout', refresh_active_symbols);\n\n            return chartable_markets;\n        });\n}\n\nexport const getMarketData = function () {\n    return markets;\n}\n\nexport const isMarketDataPresent = function (marketDataDisplayName, marketData) {\n    let present = false;\n    if (!marketData) {\n        marketData = markets;\n    }\n\n    const instrumentObj = this;\n    $.each(marketData, function (key, value) {\n        if (value.submarkets || value.instruments) {\n            present = instrumentObj.isMarketDataPresent(marketDataDisplayName, value.submarkets || value.instruments);\n        } else {\n            if ($.trim(value.display_name) == $.trim(marketDataDisplayName)) {\n                present = true;\n            }\n        }\n        return !present;\n    });\n    return present;\n}\n\nexport const getSpecificMarketData = function (marketDataDisplayName, marketData) {\n    let present = {};\n    if (!marketData) {\n        marketData = markets;\n    }\n\n    const instrumentObj = this;\n    $.each(marketData, function (key, value) {\n        if (value.submarkets || value.instruments) {\n            present = instrumentObj.getSpecificMarketData(marketDataDisplayName, value.submarkets || value.instruments);\n        } else {\n            if ($.trim(value.display_name) == $.trim(marketDataDisplayName)) {\n                present = value;\n            }\n        }\n        return $.isEmptyObject(present);\n    });\n    return present;\n}\n\nexport default {\n    init,\n    getMarketData,\n    isMarketDataPresent,\n    getSpecificMarketData\n}\n"]}